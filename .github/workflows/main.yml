name: IOS Build

on:
  push:
    branches:
      - 'main'

jobs:
  ios-build:
    name: IOS Build
    runs-on: macOS-latest
    env:
      BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
      P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
      BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64_DEV }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
    defaults:
      run:
        working-directory: ios

    steps:
      - uses: actions/checkout@v2
      
      - name: Install the Apple certificate and provisioning profile
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH
          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
      - uses: actions/cache@v2
        with:
          path: ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - uses: actions/cache@v2
        with:
          path: ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
  
      - run: yarn install
        
      - name: Install Pods
        run: pod install
        working-directory: ios
        
      - name: Build IOS App
        uses: yukiarrr/ios-build-action@v1.4.0
        with:
          project-path: ios/TestCiCd.xcodeproj
          p12-base64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          mobileprovision-base64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64_DEV }}
          code-signing-identity: 'Apple Development'
          team-id: ${{ secrets.IOS_TEAM_ID }}
          certificate-password: ${{ secrets.P12_PASSWORD }}
          workspace-path: ios/TestCiCd.xcworkspace
          scheme: TestCiCd
          export-method: development

      - name: upload artefact to App Center
        uses: Coxxs/AppCenter-Github-Action@v1
        with:
          appName: ${{secrets.RECUPE_IOS_DEV}}
          token: ${{secrets.RECUPE_IOS_DEV_API}}
          group: Collaborators
          file: output.ipa
          notifyTesters: false
          debug: false
          gitReleaseNotes: true
          
      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
